version: 0.2

env:
  variables:
    DB_USERNAME: admin
    DB_PASSWORD: Admin123123
    AWS_REGION: us-west-1
    AWS_ACCOUNT_ID: 137068239975
    BACKEND_IMAGE_REPO: backend
    FRONTEND_IMAGE_REPO: frontend
    DB_INSTANCE_ID: three-tier-mysql

phases:
  install:
    commands:
      - echo Installing utilities...
      - yum update -y --allowerasing
      - command -v curl || yum install -y curl --allowerasing
      - yum install -y jq unzip

      - echo Installing SonarScanner CLI...
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      - unzip -q sonar-scanner.zip
      - export PATH="$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin"
      - which sonar-scanner

      - echo Installing Trivy...
      - wget https://github.com/aquasecurity/trivy/releases/download/v0.63.0/trivy_0.63.0_Linux-64bit.tar.gz
      - tar -xzf trivy_0.63.0_Linux-64bit.tar.gz
      - mv trivy /usr/local/bin/
      - trivy --version

      - echo "Installing dependencies..."
      - export AWS_SDK_LOAD_CONFIG=1
      - export IMAGE_TAG=v1.${CODEBUILD_BUILD_NUMBER}
      - echo "Image tag is $IMAGE_TAG"

      - echo "Logging in to Docker Hub..."
      - echo "Starsahil@2408" | docker login -u "sahil0824" --password-stdin

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

      - echo "Fetching RDS endpoint..."
      - export RDS_ENDPOINT=$(aws rds describe-db-instances --db-instance-identifier "$DB_INSTANCE_ID" --query "DBInstances[0].Endpoint.Address" --output text --region "$AWS_REGION")
      - echo "RDS_ENDPOINT=$RDS_ENDPOINT"

  build:
    commands:
      - echo "Running SonarQube analysis..."
      - cd app-tier/
      - |
        sonar-scanner -Dsonar.projectKey=MyNotesApp \
                      -Dsonar.sources=. \
                      -Dsonar.host.url=http://98.83.143.169 \
                      -Dsonar.login=sqp_991ed6cbef2b65612ade3b362f0c97ab6b4bb0dc || echo "SonarQube scan failed, continuing..."
      - cd -

      - echo "Updating DB Host Endpoint..."
      - sed -i "s|DBHOST|$RDS_ENDPOINT|g" app-tier/config.py

      - echo "Building and tagging frontend..."
      - cd web-tier/
      - docker build -t "${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}" .
      - docker tag "${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}"
      - cd -
      
      - echo "Building and tagging backend..."
      - cd app-tier/
      - docker build -t "${BACKEND_IMAGE_REPO}:${IMAGE_TAG}" .
      - docker tag "${BACKEND_IMAGE_REPO}:${IMAGE_TAG}" "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG}"
      - cd -
      
      - mkdir -p trivy-reports
      - trivy image --severity HIGH,CRITICAL --exit-code 0 --format table -o trivy-reports/frontend-report.txt ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG} || true
      - trivy image --severity HIGH,CRITICAL --exit-code 0 --format table -o trivy-reports/backend-report.txt ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG} || true
      

  post_build:
    commands:
      - echo "Pushing frontend image..."
      - docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}"

      - echo "Pushing backend image..."
      - docker push "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG}"

      - echo "Updating Kubernetes manifest files with image URIs..."
      - mkdir -p k8s-out

      - sed "s|IMAGE_URI_FRONTEND|${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${FRONTEND_IMAGE_REPO}:${IMAGE_TAG}|g" k8s/php-deployment.yaml > k8s-out/frontend-deployment.yaml

      - sed "s|IMAGE_URI_BACKEND|${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${BACKEND_IMAGE_REPO}:${IMAGE_TAG}|g" k8s/flask-deployment.yaml > k8s-out/backend-deployment.yaml

artifacts:
  files:
    - k8s-out/frontend-deployment.yaml
    - k8s-out/backend-deployment.yaml
    - buildspec-deploy.yml
    - trivy-reports/*
  discard-paths: yes
